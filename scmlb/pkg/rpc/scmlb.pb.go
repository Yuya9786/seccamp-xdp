// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.22.3
// source: protobuf/scmlb.proto

package rpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HealthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HealthRequest) Reset() {
	*x = HealthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_scmlb_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HealthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthRequest) ProtoMessage() {}

func (x *HealthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_scmlb_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthRequest.ProtoReflect.Descriptor instead.
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_scmlb_proto_rawDescGZIP(), []int{0}
}

type StatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StatRequest) Reset() {
	*x = StatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_scmlb_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatRequest) ProtoMessage() {}

func (x *StatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_scmlb_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatRequest.ProtoReflect.Descriptor instead.
func (*StatRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_scmlb_proto_rawDescGZIP(), []int{1}
}

type StatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ifaces []*Interface `protobuf:"bytes,1,rep,name=ifaces,proto3" json:"ifaces,omitempty"`
}

func (x *StatResponse) Reset() {
	*x = StatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_scmlb_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatResponse) ProtoMessage() {}

func (x *StatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_scmlb_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatResponse.ProtoReflect.Descriptor instead.
func (*StatResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_scmlb_proto_rawDescGZIP(), []int{2}
}

func (x *StatResponse) GetIfaces() []*Interface {
	if x != nil {
		return x.Ifaces
	}
	return nil
}

type Interface struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Index    int32          `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Upstream bool           `protobuf:"varint,4,opt,name=upstream,proto3" json:"upstream,omitempty"`
	Counter  *PacketCounter `protobuf:"bytes,5,opt,name=counter,proto3" json:"counter,omitempty"`
}

func (x *Interface) Reset() {
	*x = Interface{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_scmlb_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interface) ProtoMessage() {}

func (x *Interface) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_scmlb_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interface.ProtoReflect.Descriptor instead.
func (*Interface) Descriptor() ([]byte, []int) {
	return file_protobuf_scmlb_proto_rawDescGZIP(), []int{3}
}

func (x *Interface) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Interface) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Interface) GetUpstream() bool {
	if x != nil {
		return x.Upstream
	}
	return false
}

func (x *Interface) GetCounter() *PacketCounter {
	if x != nil {
		return x.Counter
	}
	return nil
}

type PacketCounter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Icmp int32 `protobuf:"varint,1,opt,name=icmp,proto3" json:"icmp,omitempty"`
	Tcp  int32 `protobuf:"varint,2,opt,name=tcp,proto3" json:"tcp,omitempty"`
	Udp  int32 `protobuf:"varint,3,opt,name=udp,proto3" json:"udp,omitempty"`
}

func (x *PacketCounter) Reset() {
	*x = PacketCounter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_scmlb_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketCounter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketCounter) ProtoMessage() {}

func (x *PacketCounter) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_scmlb_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketCounter.ProtoReflect.Descriptor instead.
func (*PacketCounter) Descriptor() ([]byte, []int) {
	return file_protobuf_scmlb_proto_rawDescGZIP(), []int{4}
}

func (x *PacketCounter) GetIcmp() int32 {
	if x != nil {
		return x.Icmp
	}
	return 0
}

func (x *PacketCounter) GetTcp() int32 {
	if x != nil {
		return x.Tcp
	}
	return 0
}

func (x *PacketCounter) GetUdp() int32 {
	if x != nil {
		return x.Udp
	}
	return 0
}

type FireWallRuleSetRqeust struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rule *FireWallRule `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
}

func (x *FireWallRuleSetRqeust) Reset() {
	*x = FireWallRuleSetRqeust{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_scmlb_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FireWallRuleSetRqeust) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FireWallRuleSetRqeust) ProtoMessage() {}

func (x *FireWallRuleSetRqeust) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_scmlb_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FireWallRuleSetRqeust.ProtoReflect.Descriptor instead.
func (*FireWallRuleSetRqeust) Descriptor() ([]byte, []int) {
	return file_protobuf_scmlb_proto_rawDescGZIP(), []int{5}
}

func (x *FireWallRuleSetRqeust) GetRule() *FireWallRule {
	if x != nil {
		return x.Rule
	}
	return nil
}

type FireWallRuleGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FireWallRuleGetRequest) Reset() {
	*x = FireWallRuleGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_scmlb_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FireWallRuleGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FireWallRuleGetRequest) ProtoMessage() {}

func (x *FireWallRuleGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_scmlb_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FireWallRuleGetRequest.ProtoReflect.Descriptor instead.
func (*FireWallRuleGetRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_scmlb_proto_rawDescGZIP(), []int{6}
}

type FireWallRuleGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rules []*FireWallRule `protobuf:"bytes,1,rep,name=rules,proto3" json:"rules,omitempty"`
}

func (x *FireWallRuleGetResponse) Reset() {
	*x = FireWallRuleGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_scmlb_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FireWallRuleGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FireWallRuleGetResponse) ProtoMessage() {}

func (x *FireWallRuleGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_scmlb_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FireWallRuleGetResponse.ProtoReflect.Descriptor instead.
func (*FireWallRuleGetResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_scmlb_proto_rawDescGZIP(), []int{7}
}

func (x *FireWallRuleGetResponse) GetRules() []*FireWallRule {
	if x != nil {
		return x.Rules
	}
	return nil
}

type FireWallRuleDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FireWallRuleDeleteRequest) Reset() {
	*x = FireWallRuleDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_scmlb_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FireWallRuleDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FireWallRuleDeleteRequest) ProtoMessage() {}

func (x *FireWallRuleDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_scmlb_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FireWallRuleDeleteRequest.ProtoReflect.Descriptor instead.
func (*FireWallRuleDeleteRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_scmlb_proto_rawDescGZIP(), []int{8}
}

func (x *FireWallRuleDeleteRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FireWallRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Prefix      string `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
	FromSrcPort int32  `protobuf:"varint,3,opt,name=from_src_port,json=fromSrcPort,proto3" json:"from_src_port,omitempty"`
	ToSrcPort   int32  `protobuf:"varint,4,opt,name=to_src_port,json=toSrcPort,proto3" json:"to_src_port,omitempty"`
	FromDstPort int32  `protobuf:"varint,5,opt,name=from_dst_port,json=fromDstPort,proto3" json:"from_dst_port,omitempty"`
	ToDstPort   int32  `protobuf:"varint,6,opt,name=to_dst_port,json=toDstPort,proto3" json:"to_dst_port,omitempty"`
	Protocol    int32  `protobuf:"varint,7,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Count       int64  `protobuf:"varint,8,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *FireWallRule) Reset() {
	*x = FireWallRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_scmlb_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FireWallRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FireWallRule) ProtoMessage() {}

func (x *FireWallRule) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_scmlb_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FireWallRule.ProtoReflect.Descriptor instead.
func (*FireWallRule) Descriptor() ([]byte, []int) {
	return file_protobuf_scmlb_proto_rawDescGZIP(), []int{9}
}

func (x *FireWallRule) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FireWallRule) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *FireWallRule) GetFromSrcPort() int32 {
	if x != nil {
		return x.FromSrcPort
	}
	return 0
}

func (x *FireWallRule) GetToSrcPort() int32 {
	if x != nil {
		return x.ToSrcPort
	}
	return 0
}

func (x *FireWallRule) GetFromDstPort() int32 {
	if x != nil {
		return x.FromDstPort
	}
	return 0
}

func (x *FireWallRule) GetToDstPort() int32 {
	if x != nil {
		return x.ToDstPort
	}
	return 0
}

func (x *FireWallRule) GetProtocol() int32 {
	if x != nil {
		return x.Protocol
	}
	return 0
}

func (x *FireWallRule) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type DoSProtectionPolicySetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policy *DoSProtectionPolicy `protobuf:"bytes,1,opt,name=policy,proto3" json:"policy,omitempty"`
}

func (x *DoSProtectionPolicySetRequest) Reset() {
	*x = DoSProtectionPolicySetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_scmlb_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoSProtectionPolicySetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoSProtectionPolicySetRequest) ProtoMessage() {}

func (x *DoSProtectionPolicySetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_scmlb_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoSProtectionPolicySetRequest.ProtoReflect.Descriptor instead.
func (*DoSProtectionPolicySetRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_scmlb_proto_rawDescGZIP(), []int{10}
}

func (x *DoSProtectionPolicySetRequest) GetPolicy() *DoSProtectionPolicy {
	if x != nil {
		return x.Policy
	}
	return nil
}

type DoSProtectionPolicyGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DoSProtectionPolicyGetRequest) Reset() {
	*x = DoSProtectionPolicyGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_scmlb_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoSProtectionPolicyGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoSProtectionPolicyGetRequest) ProtoMessage() {}

func (x *DoSProtectionPolicyGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_scmlb_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoSProtectionPolicyGetRequest.ProtoReflect.Descriptor instead.
func (*DoSProtectionPolicyGetRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_scmlb_proto_rawDescGZIP(), []int{11}
}

type DoSProtectionPolicyGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Policies []*DoSProtectionPolicy `protobuf:"bytes,1,rep,name=policies,proto3" json:"policies,omitempty"`
}

func (x *DoSProtectionPolicyGetResponse) Reset() {
	*x = DoSProtectionPolicyGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_scmlb_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoSProtectionPolicyGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoSProtectionPolicyGetResponse) ProtoMessage() {}

func (x *DoSProtectionPolicyGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_scmlb_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoSProtectionPolicyGetResponse.ProtoReflect.Descriptor instead.
func (*DoSProtectionPolicyGetResponse) Descriptor() ([]byte, []int) {
	return file_protobuf_scmlb_proto_rawDescGZIP(), []int{12}
}

func (x *DoSProtectionPolicyGetResponse) GetPolicies() []*DoSProtectionPolicy {
	if x != nil {
		return x.Policies
	}
	return nil
}

type DoSProtectionPolicyDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DoSProtectionPolicyDeleteRequest) Reset() {
	*x = DoSProtectionPolicyDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_scmlb_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoSProtectionPolicyDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoSProtectionPolicyDeleteRequest) ProtoMessage() {}

func (x *DoSProtectionPolicyDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_scmlb_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoSProtectionPolicyDeleteRequest.ProtoReflect.Descriptor instead.
func (*DoSProtectionPolicyDeleteRequest) Descriptor() ([]byte, []int) {
	return file_protobuf_scmlb_proto_rawDescGZIP(), []int{13}
}

func (x *DoSProtectionPolicyDeleteRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DoSProtectionPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Protocol  int32   `protobuf:"varint,2,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Type      string  `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Limit     int64   `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	Status    int32   `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	FwRuleIds []int32 `protobuf:"varint,7,rep,packed,name=fw_rule_ids,json=fwRuleIds,proto3" json:"fw_rule_ids,omitempty"`
}

func (x *DoSProtectionPolicy) Reset() {
	*x = DoSProtectionPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protobuf_scmlb_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoSProtectionPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoSProtectionPolicy) ProtoMessage() {}

func (x *DoSProtectionPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_protobuf_scmlb_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoSProtectionPolicy.ProtoReflect.Descriptor instead.
func (*DoSProtectionPolicy) Descriptor() ([]byte, []int) {
	return file_protobuf_scmlb_proto_rawDescGZIP(), []int{14}
}

func (x *DoSProtectionPolicy) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DoSProtectionPolicy) GetProtocol() int32 {
	if x != nil {
		return x.Protocol
	}
	return 0
}

func (x *DoSProtectionPolicy) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DoSProtectionPolicy) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *DoSProtectionPolicy) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DoSProtectionPolicy) GetFwRuleIds() []int32 {
	if x != nil {
		return x.FwRuleIds
	}
	return nil
}

var File_protobuf_scmlb_proto protoreflect.FileDescriptor

var file_protobuf_scmlb_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x63, 0x6d, 0x6c, 0x62,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x63, 0x6d, 0x6c, 0x62, 0x2e, 0x76, 0x31,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0f, 0x0a,
	0x0d, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x0d,
	0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x3b, 0x0a,
	0x0c, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a,
	0x06, 0x69, 0x66, 0x61, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x73, 0x63, 0x6d, 0x6c, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x52, 0x06, 0x69, 0x66, 0x61, 0x63, 0x65, 0x73, 0x22, 0x84, 0x01, 0x0a, 0x09, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x70, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x31,
	0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x73, 0x63, 0x6d, 0x6c, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65,
	0x72, 0x22, 0x47, 0x0a, 0x0d, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x69, 0x63, 0x6d, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x63, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x63, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x64, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x75, 0x64, 0x70, 0x22, 0x43, 0x0a, 0x15, 0x46, 0x69,
	0x72, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x52, 0x71, 0x65,
	0x75, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x73, 0x63, 0x6d, 0x6c, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x72,
	0x65, 0x57, 0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x75, 0x6c, 0x65, 0x22,
	0x18, 0x0a, 0x16, 0x46, 0x69, 0x72, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x47, 0x0a, 0x17, 0x46, 0x69, 0x72,
	0x65, 0x57, 0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x63, 0x6d, 0x6c, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x46,
	0x69, 0x72, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x05, 0x72, 0x75, 0x6c,
	0x65, 0x73, 0x22, 0x2b, 0x0a, 0x19, 0x46, 0x69, 0x72, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x52, 0x75,
	0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22,
	0xf0, 0x01, 0x0a, 0x0c, 0x46, 0x69, 0x72, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x22, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x73, 0x72, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x72, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0b,
	0x74, 0x6f, 0x5f, 0x73, 0x72, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x74, 0x6f, 0x53, 0x72, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x22, 0x0a, 0x0d,
	0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x64, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x44, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74,
	0x12, 0x1e, 0x0a, 0x0b, 0x74, 0x6f, 0x5f, 0x64, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x44, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x56, 0x0a, 0x1d, 0x44, 0x6f, 0x53, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x63, 0x6d, 0x6c, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x6f, 0x53, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x22, 0x1f, 0x0a, 0x1d, 0x44, 0x6f,
	0x53, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5b, 0x0a, 0x1e, 0x44,
	0x6f, 0x53, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a,
	0x08, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x73, 0x63, 0x6d, 0x6c, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x53, 0x50, 0x72,
	0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x52, 0x08,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x69, 0x65, 0x73, 0x22, 0x32, 0x0a, 0x20, 0x44, 0x6f, 0x53, 0x50,
	0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa3, 0x01, 0x0a,
	0x13, 0x44, 0x6f, 0x53, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0b, 0x66, 0x77, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x69, 0x64,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x66, 0x77, 0x52, 0x75, 0x6c, 0x65, 0x49,
	0x64, 0x73, 0x32, 0x9c, 0x05, 0x0a, 0x08, 0x53, 0x63, 0x6d, 0x4c, 0x62, 0x41, 0x70, 0x69, 0x12,
	0x39, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x17, 0x2e, 0x73, 0x63, 0x6d, 0x6c,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x35, 0x0a, 0x04, 0x53, 0x74,
	0x61, 0x74, 0x12, 0x15, 0x2e, 0x73, 0x63, 0x6d, 0x6c, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x63, 0x6d, 0x6c,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4a, 0x0a, 0x0f, 0x46, 0x69, 0x72, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c,
	0x65, 0x53, 0x65, 0x74, 0x12, 0x1f, 0x2e, 0x73, 0x63, 0x6d, 0x6c, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x69, 0x72, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x52,
	0x71, 0x65, 0x75, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x56, 0x0a,
	0x0f, 0x46, 0x69, 0x72, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x47, 0x65, 0x74,
	0x12, 0x20, 0x2e, 0x73, 0x63, 0x6d, 0x6c, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x72, 0x65,
	0x57, 0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x63, 0x6d, 0x6c, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69,
	0x72, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x52, 0x75, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x12, 0x46, 0x69, 0x72, 0x65, 0x57, 0x61, 0x6c,
	0x6c, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x73, 0x63,
	0x6d, 0x6c, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x72, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x52,
	0x75, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x59, 0x0a, 0x16, 0x44, 0x6f, 0x53, 0x50,
	0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x53,
	0x65, 0x74, 0x12, 0x27, 0x2e, 0x73, 0x63, 0x6d, 0x6c, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f,
	0x53, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x6b, 0x0a, 0x16, 0x44, 0x6f, 0x53, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x47, 0x65, 0x74, 0x12, 0x27, 0x2e,
	0x73, 0x63, 0x6d, 0x6c, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x53, 0x50, 0x72, 0x6f, 0x74,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x73, 0x63, 0x6d, 0x6c, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x6f, 0x53, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x5f, 0x0a, 0x19, 0x44, 0x6f, 0x53, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x2a, 0x2e,
	0x73, 0x63, 0x6d, 0x6c, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x6f, 0x53, 0x50, 0x72, 0x6f, 0x74,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x74, 0x65, 0x72, 0x61, 0x73, 0x73, 0x79, 0x69, 0x2f, 0x73, 0x65, 0x63, 0x63, 0x61, 0x6d, 0x70,
	0x2d, 0x78, 0x64, 0x70, 0x2f, 0x73, 0x63, 0x6d, 0x6c, 0x62, 0x2f, 0x72, 0x70, 0x63, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protobuf_scmlb_proto_rawDescOnce sync.Once
	file_protobuf_scmlb_proto_rawDescData = file_protobuf_scmlb_proto_rawDesc
)

func file_protobuf_scmlb_proto_rawDescGZIP() []byte {
	file_protobuf_scmlb_proto_rawDescOnce.Do(func() {
		file_protobuf_scmlb_proto_rawDescData = protoimpl.X.CompressGZIP(file_protobuf_scmlb_proto_rawDescData)
	})
	return file_protobuf_scmlb_proto_rawDescData
}

var file_protobuf_scmlb_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_protobuf_scmlb_proto_goTypes = []interface{}{
	(*HealthRequest)(nil),                    // 0: scmlb.v1.HealthRequest
	(*StatRequest)(nil),                      // 1: scmlb.v1.StatRequest
	(*StatResponse)(nil),                     // 2: scmlb.v1.StatResponse
	(*Interface)(nil),                        // 3: scmlb.v1.Interface
	(*PacketCounter)(nil),                    // 4: scmlb.v1.PacketCounter
	(*FireWallRuleSetRqeust)(nil),            // 5: scmlb.v1.FireWallRuleSetRqeust
	(*FireWallRuleGetRequest)(nil),           // 6: scmlb.v1.FireWallRuleGetRequest
	(*FireWallRuleGetResponse)(nil),          // 7: scmlb.v1.FireWallRuleGetResponse
	(*FireWallRuleDeleteRequest)(nil),        // 8: scmlb.v1.FireWallRuleDeleteRequest
	(*FireWallRule)(nil),                     // 9: scmlb.v1.FireWallRule
	(*DoSProtectionPolicySetRequest)(nil),    // 10: scmlb.v1.DoSProtectionPolicySetRequest
	(*DoSProtectionPolicyGetRequest)(nil),    // 11: scmlb.v1.DoSProtectionPolicyGetRequest
	(*DoSProtectionPolicyGetResponse)(nil),   // 12: scmlb.v1.DoSProtectionPolicyGetResponse
	(*DoSProtectionPolicyDeleteRequest)(nil), // 13: scmlb.v1.DoSProtectionPolicyDeleteRequest
	(*DoSProtectionPolicy)(nil),              // 14: scmlb.v1.DoSProtectionPolicy
	(*emptypb.Empty)(nil),                    // 15: google.protobuf.Empty
}
var file_protobuf_scmlb_proto_depIdxs = []int32{
	3,  // 0: scmlb.v1.StatResponse.ifaces:type_name -> scmlb.v1.Interface
	4,  // 1: scmlb.v1.Interface.counter:type_name -> scmlb.v1.PacketCounter
	9,  // 2: scmlb.v1.FireWallRuleSetRqeust.rule:type_name -> scmlb.v1.FireWallRule
	9,  // 3: scmlb.v1.FireWallRuleGetResponse.rules:type_name -> scmlb.v1.FireWallRule
	14, // 4: scmlb.v1.DoSProtectionPolicySetRequest.policy:type_name -> scmlb.v1.DoSProtectionPolicy
	14, // 5: scmlb.v1.DoSProtectionPolicyGetResponse.policies:type_name -> scmlb.v1.DoSProtectionPolicy
	0,  // 6: scmlb.v1.ScmLbApi.Health:input_type -> scmlb.v1.HealthRequest
	1,  // 7: scmlb.v1.ScmLbApi.Stat:input_type -> scmlb.v1.StatRequest
	5,  // 8: scmlb.v1.ScmLbApi.FireWallRuleSet:input_type -> scmlb.v1.FireWallRuleSetRqeust
	6,  // 9: scmlb.v1.ScmLbApi.FireWallRuleGet:input_type -> scmlb.v1.FireWallRuleGetRequest
	8,  // 10: scmlb.v1.ScmLbApi.FireWallRuleDelete:input_type -> scmlb.v1.FireWallRuleDeleteRequest
	10, // 11: scmlb.v1.ScmLbApi.DoSProtectionPolicySet:input_type -> scmlb.v1.DoSProtectionPolicySetRequest
	11, // 12: scmlb.v1.ScmLbApi.DoSProtectionPolicyGet:input_type -> scmlb.v1.DoSProtectionPolicyGetRequest
	13, // 13: scmlb.v1.ScmLbApi.DoSProtectionPolicyDelete:input_type -> scmlb.v1.DoSProtectionPolicyDeleteRequest
	15, // 14: scmlb.v1.ScmLbApi.Health:output_type -> google.protobuf.Empty
	2,  // 15: scmlb.v1.ScmLbApi.Stat:output_type -> scmlb.v1.StatResponse
	15, // 16: scmlb.v1.ScmLbApi.FireWallRuleSet:output_type -> google.protobuf.Empty
	7,  // 17: scmlb.v1.ScmLbApi.FireWallRuleGet:output_type -> scmlb.v1.FireWallRuleGetResponse
	15, // 18: scmlb.v1.ScmLbApi.FireWallRuleDelete:output_type -> google.protobuf.Empty
	15, // 19: scmlb.v1.ScmLbApi.DoSProtectionPolicySet:output_type -> google.protobuf.Empty
	12, // 20: scmlb.v1.ScmLbApi.DoSProtectionPolicyGet:output_type -> scmlb.v1.DoSProtectionPolicyGetResponse
	15, // 21: scmlb.v1.ScmLbApi.DoSProtectionPolicyDelete:output_type -> google.protobuf.Empty
	14, // [14:22] is the sub-list for method output_type
	6,  // [6:14] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_protobuf_scmlb_proto_init() }
func file_protobuf_scmlb_proto_init() {
	if File_protobuf_scmlb_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protobuf_scmlb_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HealthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_scmlb_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_scmlb_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_scmlb_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interface); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_scmlb_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketCounter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_scmlb_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FireWallRuleSetRqeust); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_scmlb_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FireWallRuleGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_scmlb_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FireWallRuleGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_scmlb_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FireWallRuleDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_scmlb_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FireWallRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_scmlb_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoSProtectionPolicySetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_scmlb_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoSProtectionPolicyGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_scmlb_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoSProtectionPolicyGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_scmlb_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoSProtectionPolicyDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protobuf_scmlb_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoSProtectionPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protobuf_scmlb_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protobuf_scmlb_proto_goTypes,
		DependencyIndexes: file_protobuf_scmlb_proto_depIdxs,
		MessageInfos:      file_protobuf_scmlb_proto_msgTypes,
	}.Build()
	File_protobuf_scmlb_proto = out.File
	file_protobuf_scmlb_proto_rawDesc = nil
	file_protobuf_scmlb_proto_goTypes = nil
	file_protobuf_scmlb_proto_depIdxs = nil
}
